name: os-build

on: [push, pull_request]

concurrency:
  group: os-build-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' && !startsWith(github.ref, 'refs/heads/release/') }}

env:
  NUGET_CERT_REVOCATION_MODE: offline
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  build-emulator:
    name: build-emulator-${{matrix.config.name}}
    runs-on: ${{matrix.config.os}}
    strategy:
      matrix:
        dotnet-version: ['8.0']
        config:
          - {name: x86_64-windows, os: windows-latest, arch: x64, buildType: Release}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{matrix.dotnet-version}}

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - uses: seanmiddleditch/gha-setup-ninja@master

      - name: Set up build environment (Windows, Visual Studio)
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{matrix.config.arch}}
        if: runner.os == 'Windows'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Conan
        shell: bash
        run: |
          pip install conan==2.6.0

      - name: Configure
        shell: bash
        run: |
          conan install . -pr:a=src/os/hal/chips/emulator/cmake/conan-profile.jinja -s build_type=Release --build=missing
          dotnet run --project conf/Chino.Conf.Generator gen emulator `pwd`
          cmake --preset conan-release
          cmake --preset conan-release # configure again for llvm

      - name: Build & Install
        shell: bash
        run: |
          cmake --build build --config ${{matrix.config.buildType}}
          cmake --install build --prefix install

      - name: Upload chino emulator Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: chino-emulator-${{matrix.config.name}}
          path: ${{github.workspace}}/install
          if-no-files-found: error
